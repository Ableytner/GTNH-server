#!/bin/bash

. /gtnh/scripts/gtnh-utils

cd /data
mkdir -p docker-backups && chown -R minecraft:minecraft docker-backups

IMAGE_VERSION=$(version_to_int "${GTNH_VERSION}" "${GTNH_DAILY_BUILD}")

# convert legacy backups
if [[ -f docker-backups/current.txt ]]; then
    INSTALLED_IMAGE_VERSION=$(<docker-backups/current.txt)

    if (( $INSTALLED_IMAGE_VERSION < 10000 )); then
        log "trying to rename backups to new format"

        cd docker-backups

        # https://unix.stackexchange.com/a/478454
        if [[ $(ls -1 *.zip 2>/dev/null | wc -l) != 0 ]]; then
            log "keeping newest legacy backup as old.zip"

            rm -f old.zip

            find ./*.zip -maxdepth 1 ! -name old.zip -type f -print0 \
            | xargs -I {} -0 basename {} \
            | cut -d "." -f1 \
            | sort -nr \
            | head -n 1 \
            | mv "$(cat -).zip" old.zip

            find ./*.zip -maxdepth 1 ! -name old.zip -type f -delete &>/dev/null
        else
            log "No backups to keep"
        fi

        cd ..
    fi
fi
echo $IMAGE_VERSION > docker-backups/current.txt

# load or create backup
if [[ -v INSTALLED_IMAGE_VERSION ]] && (( INSTALLED_IMAGE_VERSION > IMAGE_VERSION )); then
    load_backup "${IMAGE_VERSION}"
else
    create_backup "${IMAGE_VERSION}"
fi

# install server files if needed
if [[ -v INSTALLED_IMAGE_VERSION ]] && (( INSTALLED_IMAGE_VERSION == IMAGE_VERSION )); then
    log "skipping install step for already installed version"
else
    install_server
fi

# always add additional mods
install_additional_mods ${WEBMAP}

# substitute MOTD
if [[ -v MOTD ]]; then
    export MOTD=$(substitute_motd "${MOTD}" "${GTNH_VERSION}" "${GTNH_DAILY_BUILD}")
    echo "substituted MOTD to ${MOTD}"
fi

# start the base images' entrypoint
/start
