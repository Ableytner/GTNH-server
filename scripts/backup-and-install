#!/bin/bash

# shellcheck source=start-utils
. "${SCRIPTS:-/}start-utils"

cd /data
mkdir -p docker-backups && chown -R minecraft:minecraft docker-backups

if [[ -f docker-backups/current.txt ]]; then
    CURRENT_GTNH_NIGHTLY_BUILD=$(<docker-backups/current.txt)
fi
echo $GTNH_NIGHTLY_BUILD > docker-backups/current.txt

function backup_func {
    cd /data

    mkdir -p docker-backups/new && chown minecraft:minecraft docker-backups/new

    if [[ -v CURRENT_GTNH_NIGHTLY_BUILD ]] && (( CURRENT_GTNH_NIGHTLY_BUILD > GTNH_NIGHTLY_BUILD )); then
        BACKUP_FILE="docker-backups/${GTNH_NIGHTLY_BUILD}.zip"

        if [[ ! -f "${BACKUP_FILE}" ]]; then
            log "backup file ${BACKUP_FILE} wasn't found"
            if [[ -f "docker-backups/old.zip" ]]; then
                log "falling back to backup file old.zip"
                BACKUP_FILE="docker-backups/old.zip"
            else
                log "ERR backup zip not found: ${BACKUP_FILE}"
                exit 1
            fi
        fi

        log "loading backup: ${BACKUP_FILE}"

        rm -rf serverutilities visualprospecting World config/JourneyMapServer

        unzip -q $BACKUP_FILE -d docker-backups/new
        chown -R minecraft:minecraft docker-backups/new
        # fix question mark permissions
        # https://unix.stackexchange.com/a/393603
        chmod -R a+X docker-backups/new
        mv docker-backups/new/serverutilities docker-backups/new/visualprospecting docker-backups/new/World .
        mv docker-backups/new/config/JourneyMapServer ./config
    else
        if [[ ! -d World ]]; then
            log "not creating backup as World folder doesn't exist"
        else
            # use default value if variable doesn't exist
            # https://www.debuntu.org/how-to-bash-parameter-expansion-and-default-values/
            BACKUP_FILE="docker-backups/${CURRENT_GTNH_NIGHTLY_BUILD:-old}.zip"

            log "creating backup: ${BACKUP_FILE}"

            if [[ -f "${BACKUP_FILE}" ]]; then
                log "deleting old backup"
                rm "${BACKUP_FILE}"
            fi

            mkdir -p docker-backups/new/config && chown minecraft:minecraft docker-backups/new/config

            cp -rp serverutilities visualprospecting World docker-backups/new/
            cp -rp config/JourneyMapServer docker-backups/new/config/
            cd docker-backups/new
            zip -rq "../../${BACKUP_FILE}" .
            cd ../..
        fi
    fi

    log "cleaning up"
    rm -rf docker-backups/new
}

function install_func {
    cd /data

    mkdir -p docker-backups/install && mkdir -p docker-backups/install/config && chown minecraft:minecraft docker-backups/install

    if [[ -v CURRENT_GTNH_NIGHTLY_BUILD ]] && (( CURRENT_GTNH_NIGHTLY_BUILD == GTNH_NIGHTLY_BUILD )); then
        log "skipping install step for already installed version"
    else
        if [[ ! -f /download/server.zip ]]; then
            log "ERR server.zip not found"
            exit 1
        fi

        log "installing server.zip"

        unzip -q /download/server.zip -d docker-backups/install/

        chown -R minecraft:minecraft docker-backups/install
        # fix question mark permissions
        # https://unix.stackexchange.com/a/393603
        chmod -R a+X docker-backups/install

        # persist JourneyMap id
        cp -rp config/JourneyMapServer docker-backups/install/config/

        rm -rf config libraries mods *.jar java9args.txt

        cd docker-backups/install
        mv config libraries mods *.jar java9args.txt ../..
        if [[ ! -d ../../serverutilities ]]; then
            mv serverutilities ../..
        fi
        mv -n server-icon.png ../..
        cd ../..
    fi

    if [[ -d /mods ]]; then
        log "copying mods"

        cp -rp /mods/* mods/
    fi

    log "cleaning up"
    rm -rf docker-backups/install
}

function substitute_motd {
    cd /data

    cat config/GTNewHorizons/dreamcraft.cfg \
    | grep -oP "(?<=S\:ModPackVersion\=).+(?=\b)" \
    | MODPACK_VERSION=$(cat -)

    export MOTD=${MOTD/MODPACK_VERSION/$MODPACK_VERSION}
    export MOTD=${MOTD/NIGHTLY_BUILD/$GTNH_NIGHTLY_BUILD}
}

backup_func
install_func
if [[ -v MOTD ]]; then
    substitute_motd
    echo "substituted MOTD to $MOTD"
fi

# start the base images' entrypoint
/start
